name: Build & Deploy Chrome Extension

permissions:
  contents: write

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.0.1)'
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. ソース取得
      - uses: actions/checkout@v3
      - name: Restore private key from Secret
        run: |
          echo "${{ secrets.PRIVATE_KEY_PEM }}" | base64 -d > key.pem

      # 2. Node.js 22 をセットアップ
      - uses: actions/setup-node@v3
        with:
          node-version: '22'

      # 3. 依存インストール＆ビルド
      - run: npm ci
      - run: npm run build

      - name: Get version from package.json
        id: get_version
        run: |
          # fetch the version field
          VERSION=$(node -p "require('./package.json').version")
          # export it for later steps
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # 4. バージョン更新
      - name: Bump package.json version
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Debug list workspace
        run: |
          echo "WORKING DIR: $(pwd)"
          ls -R .

      # 5. manifest.json に同期
      - name: Sync manifest version
        run: node scripts/sync-manifest-version.cjs

      # 6. 変更をコミット（version bump）
      - name: Commit version bump
        uses: EndBug/add-and-commit@v9
        with:
          author_name: github-actions[bot]
          author_email: github-actions[bot]@users.noreply.github.com
          message: 'chore(release): v${{ github.event.inputs.version }}'

      # 7. crx パッケージ化
      - name: Pack CRX
        run: |
          npm install -g crx3
          mkdir -p dist
          crx3 ./.output/chrome-mv3 \
            -p ./key.pem \
            -o dist/extension-v${{ env.VERSION }}.crx

      - name: Generate updates.xml
        run: |
          cat > dist/updates.xml <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <gupdate xmlns="http://www.google.com/update2/response" protocol="2.0">
            <app appid="${{ env.EXTENSION_ID }}">
              <updatecheck
                codebase="https://${{ github.repository_owner }}.github.io/${{ github.repository }}/ xtension-v${{ env.VERSION }}.crx"
                version="${{ env.VERSION }}"/>
            </app>
          </gupdate>
          EOF

      # 8. GitHub Pages へデプロイ
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          user_name: github-actions[bot]
          user_email: github-actions[bot]@users.noreply.github.com
